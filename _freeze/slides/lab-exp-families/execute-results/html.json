{
  "hash": "4b81d16c09e887491078e7df17859a34",
  "result": {
    "markdown": "---\ntitle: \"Exponential families & variable transformation\"\nformat: \n    revealjs:\n      mainfont: Lato\n      smaller: true\n---\n\n\n\n# Practice exercises\n\n## Ex 1: exponential family\n\n\nLet $p(y|\\theta) = \\theta^{y}(1-\\theta)^{1-y}$\n\na. Identify the transform $\\phi = f(\\theta)$ such that $p(y | \\phi)$ can be written as $h(y) c(\\phi) e^{\\phi t(y)}$. Identify the sufficient statistic $t(y)$, as well as $c(\\phi)$.\nb. Write down the conjugate prior $p(\\phi|n_0, t_0)$.\n\n\n\n## Ex 2: variable transform\n\nConfirm that $f(\\theta)$ from the previous exercise is monotonic and invertible. Next, using the one-line formula: $p_\\theta(\\theta) = p_{\\phi}(f(\\theta))|\\frac{d\\phi}{d\\theta}|$, show that the prior, $p(\\theta | n_0, t_0)$ is a beta density.\n\nTo verify the above numerically, sample from $p(\\theta | n_0, t_0)$ using the code below, for some $n_0, t_0$ of your choosing.\n\n```\ntheta = rbeta(n = 10000, shape1 = n_0 * t_0, shape2 = n_0*(1-t_0)\n```\n\nNext, transform each sample of the object `theta` to `phi` using $f(\\theta)$ as defined in exercise 1.\n\nFinally, plot a density plot of samples `phi` and, on the same plot, add $p(\\phi | n_0, t_0)$ from exercise 1.\n\n## Ex 3: another variable transform\n\nLet $X \\sim \\text{Unif}(5, 10)$ and let $Y = X^2$\n\nNotice that even though $X^2$ is not a monotonic function *everywhere*, it *is* a monotonic function **over the support of X**. \n\nExercise: use the change of variables formula to derive $p(y)$. Confirm via simulation, as in exercise 2.\n\n# Solutions\n\n\n::: {.cell}\n\n:::\n\n\n\n## Ex 1: solution\n\n#### a\n\n\n$$\n\\phi = log(\\frac{\\theta}{1-\\theta})\n$$\n\n\nTherefore,\n\n\n$$\np(y|\\phi) = e^{\\phi y} \\left(\\frac{1}{1 + e^{\\phi}} \\right)\n$$\n\n\nand\n\n\n$$\n\\begin{aligned}\nt(y) &= y\\\\\nc(\\phi) &= \\left(\\frac{1}{1 + e^{\\phi}} \\right)\n\\end{aligned}\n$$\n\n\n#### b\n\n\n$$\np(\\phi | n_0, t_0) \\propto \\left({1 + e^{\\phi}} \\right)^{-n_0} e^{n_0 t_0 \\phi}\n$$\n\n\n## Ex 2: solution\n\nMonotonic if $\\theta_1 \\geq \\theta_2$ implies $f(\\theta_1) \\geq f(\\theta_2)$ over the support $\\theta_1, \\theta_2 \\in [0,1]$.\n\nLet $\\theta_1 > \\theta_2$,  let's check:\n\n\n$$\n\\begin{aligned}\n\\log \\left(\\frac{\\theta_1}{1-\\theta_1}\\right) &> \\log \\left(\\frac{\\theta_2}{1-\\theta_2}\\right)\\\\\n\\theta_1 (1-\\theta_2) &> \\theta_2(1-\\theta_1)\\\\\n\\theta_1 > \\theta_2\n\\end{aligned}\n$$\n\nIt is monotonic!\n\nFurthermore, we found it was invertible in ex 1: $\\theta = e^{\\phi}/(1 + e^{\\phi})$.\n\nOne-line formula: $p_\\theta(\\theta) = p_{\\phi}(f(\\theta))|\\frac{d\\phi}{d\\theta}|$:\n\n\n$$\n\\begin{aligned}\np(\\theta) &\\propto (1-\\theta)^{n_0} (\\theta/(1-\\theta))^{n_0 t_0} \\left|\\frac{d\\phi}{d\\theta} \\right|\\\\\n&= \\theta^{n_0 t_0 -1} (1-\\theta)^{n_0(1 -t_0) - 1}\n\\end{aligned}\n$$\n\nSo $\\theta \\sim \\text{beta}(n_0 t_0, n_0(1-t_0))$.\n\nRemember that $a$ and $b$ of a beta distribution must both be positive! This constrains what $n_0$ and $t_0$ can be.\n\n## Ex 2: solution (pt 2)\n\n::: panel-tabset\n\n## plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lab-exp-families_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n\n\n## code\n\n::: {.cell}\n\n```{.r .cell-code}\nn_0 = 5\nt_0 = .5\ntheta = rbeta(n = 100000, shape1 = n_0 * t_0, shape2 = n_0 * (1 - t_0))\nphi = log((theta / (1-theta)))\n\ndf = data.frame(phi)\n\nfphi = function(phi, n_0, t_0) {\n  ( (1 + exp(phi))^(-n_0) ) * exp(n_0 * t_0 * phi) / \n    beta(n_0 * t_0, n_0 * (1 - t_0))\n}\n\ndf %>%\n  ggplot(aes(x = phi)) + \n  stat_function(fun = fphi, args = list(n_0 = n_0, t_0 = t_0)) +\n  geom_histogram(aes(x = phi, y = ..density..),\n                 fill = 'steelblue', alpha = 0.5)\n```\n:::\n\n:::\n\nThe normalizing constant can be obtained by transforming from $p(\\theta)$ (which is beta) back to $p(\\phi)$.\n\n\n## Ex 3: solution\n\n::: panel-tabset\n\n## plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](lab-exp-families_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n\n\n## code \n\n::: {.cell}\n\n```{.r .cell-code}\nx = runif(100000, 5, 10)\ny = x^2\n\ndf = data.frame(y)\n\nf = function(y) {\n  return(.1/sqrt(y))\n}\n\ndf %>%\n  ggplot(aes(x = y)) + \n  stat_function(fun = f) +\n  geom_histogram(aes(x = y, y = ..density..),\n                 fill = 'steelblue', alpha = 0.5)\n```\n:::\n\n\n\n:::",
    "supporting": [
      "lab-exp-families_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}